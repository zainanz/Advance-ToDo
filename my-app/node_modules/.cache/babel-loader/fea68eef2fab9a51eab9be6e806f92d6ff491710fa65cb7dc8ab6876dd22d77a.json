{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Cookies from 'js-cookie';\nconst initialState = {\n  isLoggedIn: false,\n  token: null,\n  // Add token to state\n  status: 'idle',\n  // Add status for async operations\n  error: null\n};\nexport const login = createAsyncThunk('auth/login', async userData => {\n  const response = await fetch(\"http://localhost:3000/login\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  const data = await response.json();\n\n  // Optionally store the token in cookies\n  Cookies.set('token', data.token);\n  return data;\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout(state) {\n      state.isLoggedIn = false;\n    }\n  }\n});\nexport const {\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Cookies","initialState","isLoggedIn","token","status","error","login","userData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","set","authSlice","name","reducers","logout","state","actions","reducer"],"sources":["/home/zainan-ali/code/zainanz/test-components/my-app/src/app/store/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Cookies from 'js-cookie';\n\nconst initialState = {\n  isLoggedIn: false,\n  token: null, // Add token to state\n  status: 'idle', // Add status for async operations\n  error: null\n}\n\nexport const login = createAsyncThunk('auth/login', async (userData) => {\n  const response = await fetch(\"http://localhost:3000/login\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n\n  const data = await response.json();\n\n  // Optionally store the token in cookies\n  Cookies.set('token', data.token);\n  return data;\n});\n\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    logout(state){\n      state.isLoggedIn = false;\n    }\n}})\n\n\nexport const {logout} = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAE,IAAI;EAAE;EACbC,MAAM,EAAE,MAAM;EAAE;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGP,gBAAgB,CAAC,YAAY,EAAE,MAAOQ,QAAQ,IAAK;EACtE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;IAC1DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;EAC/B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;EAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;;EAElC;EACAlB,OAAO,CAACmB,GAAG,CAAC,OAAO,EAAEF,IAAI,CAACd,KAAK,CAAC;EAChC,OAAOc,IAAI;AACb,CAAC,CAAC;AAGF,MAAMG,SAAS,GAAGtB,WAAW,CAAC;EAC5BuB,IAAI,EAAE,MAAM;EACZpB,YAAY;EACZqB,QAAQ,EAAE;IACRC,MAAMA,CAACC,KAAK,EAAC;MACXA,KAAK,CAACtB,UAAU,GAAG,KAAK;IAC1B;EACJ;AAAC,CAAC,CAAC;AAGH,OAAO,MAAM;EAACqB;AAAM,CAAC,GAAGH,SAAS,CAACK,OAAO;AACzC,eAAeL,SAAS,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}